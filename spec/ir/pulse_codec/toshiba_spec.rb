require 'ir/pulse_codec/toshiba'
require 'ir/io_adapter/arduino'
require 'stringio'

module IR
  module PulseCodec
    describe Toshiba do
      let(:serial_data) do
        '452,427,64,150,65,149,65,150,65,149,65,42,64,42,64,150,64,42,65,43,64,43,64,43,65,42,64,' \
        '150,65,150,64,42,64,150,64,40,67,42,65,41,66,41,65,42,65,42,64,150,64,150,64,150,64,150,' \
        '65,150,64,150,64,150,65,149,65,42,64,42,64,43,64,42,64,42,65,42,65,42,65,42,65,42,64,'    \
        '150,64,42,65,149,65,149,65,150,64,42,64,42,64,42,64,42,65,42,65,150,64,42,64,42,64,42,'   \
        '65,42,65,42,65,150,64,41,67,42,65,42,65,42,65,41,65,43,64,42,64,42,64,42,64,42,64,150,64' \
        ',150,64,43,64,43,64,43,64,42,65,490,451,428,64,150,64,150,65,149,65,149,65,42,64,42,64,'  \
        '150,64,42,64,42,65,42,64,43,64,43,64,150,66,150,65,42,64,150,64,43,64,43,64,42,64,42,64,' \
        '42,64,42,65,149,65,150,64,150,64,150,65,149,65,150,64,150,64,150,65,42,64,42,65,42,64,'   \
        '42,64,42,64,42,64,42,64,42,64,42,65,150,64,42,65,150,65,150,64,150,64,42,64,43,64,42,64,' \
        '42,64,42,64,150,65,42,65,42,66,41,65,42,65,42,64,150,64,42,65,42,64,42,65,41,66,41,65,'   \
        "42,65,42,64,42,65,42,64,42,64,150,65,150,64,43,64,42,64,43,64,42,65\n"
      end

      let(:pulse) do
        io = StringIO.new(serial_data)
        IOAdapter::Arduino.new(io).each_received_pulse.to_a.first
      end

      describe '.decode_pulse' do
        it 'returns decoded data' do
          data = Toshiba.decode_pulse(pulse)
          expect(data.to_s)
            .to eq('111100100000110100000011111111000000000101110000010000010000000000110000')
        end

        describe 'the returned data' do
          let(:data) { Toshiba.decode_pulse(pulse) }

          it 'is big-endian' do
            expect(data.endian).to eq(:big)
          end

          it 'treat the first 16 bits as custom bits' do
            expect(data.custom_bits_length).to eq(16)
          end
        end
      end
    end
  end
end
